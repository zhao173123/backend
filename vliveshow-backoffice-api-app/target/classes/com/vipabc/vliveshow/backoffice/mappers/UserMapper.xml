<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vipabc.vliveshow.backoffice.mappers.UserMapper">

    <resultMap id="UserResultMap" type="User">
        <id column="userId" property="userId"/>
        <result column="userName" property="userName"/>
        <result column="nickname" property="nickName"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="title" property="titleId"/>
    </resultMap>


    <select id="findUserByName" resultMap="UserResultMap">
        SELECT
            userId,
            userName,
            nickname,
            title,
            password
        FROM t_users
        WHERE userName = #{userName}
    </select>


    <select id="findUsersByTitle" resultMap="UserResultMap" parameterType="int">
        <![CDATA[
        SELECT
            userId,
            userName,
            nickname,
            title
        FROM t_users
        WHERE (title & #{titleId}) != 0
        ]]>
    </select>


    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO t_users
        (
            username,
            nickname,
            email,
            password,
            title
        )
        VALUES
            (
                #{userName},
                #{nickName},
                #{email},
                #{password},
                #{titleId}
            )
    </insert>


    <update id="updateUserByUserId" parameterType="User">
        UPDATE t_users
        <set>
            <if test="userName != null">userName = #{userName},</if>
            <if test="nickName != null">nickname = #{nickName},</if>
            <if test="email != null">email = #{email},</if>
            <if test="password != null">password = #{password},</if>
            <if test="titleId != null">title = #{titleId},</if>
        </set>
        where userId=#{userId}
    </update>


    <delete id="deleteUserByUserId" parameterType="long">
        DELETE FROM t_users
        WHERE userid = #{userId}
    </delete>

</mapper>